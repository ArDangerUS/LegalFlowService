import React, { useState } from 'react';
import {User, Office, UserRole} from '../../types/user';
import { AuthService } from '../../services/AuthService';
import { InvitationModal } from '../InvitationModal';
import { PendingInvitations } from '../PendingInvitations';
import { useInvitations } from '../../hooks/useInvitations';

interface UserManagementProps {
  currentUser: User;
  users: User[];
  offices: Office[];
  onUserUpdate: () => void;
}

export const UserManagement: React.FC<UserManagementProps> = ({
  currentUser,
  users,
  offices,
  onUserUpdate
}) => {
  const [showInvitationModal, setShowInvitationModal] = useState(false);
  const {
    invitations,
    createInvitation,
    resendInvitation,
    deleteInvitation,
  } = useInvitations();

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
  const canManageUsers = AuthService.canUserPerformAction(
    currentUser,
    'manage_users',
    'users'
  );

  const canCreateInvitations = AuthService.canUserPerformAction(
    currentUser,
    'create_invitation',
    'invitations'
  );

  // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏
  const visibleUsers = (users || []).filter(user => {
    if (currentUser.role === 'admin') {
      return true; // –ê–¥–º–∏–Ω –≤–∏–¥–∏—Ç –≤—Å–µ—Ö
    }
    if (currentUser.role === 'office_admin') {
      return user.officeId === currentUser.officeId; // –ê–¥–º–∏–Ω –æ—Ñ–∏—Å–∞ –≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏—Ö
    }
    return user.officeId === currentUser.officeId; // –Æ—Ä–∏—Å—Ç—ã –≤–∏–¥—è—Ç –∫–æ–ª–ª–µ–≥ –ø–æ –æ—Ñ–∏—Å—É
  });

  const handleSendInvitation = async (data: {
    email: string;
    role:   UserRole;
    officeId?: string;
  }) => {
    await createInvitation(data);
    // –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
  };

  if (!canManageUsers && !canCreateInvitations) {
    return (
      <div className="flex items-center justify-center h-64">
        <div className="text-center">
          <div className="text-gray-400 mb-4">üîí</div>
          <h3 className="text-lg font-medium text-gray-900 mb-2">
            –î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω
          </h3>
          <p className="text-gray-500">
            –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.
          </p>
        </div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∫–Ω–æ–ø–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-2xl font-bold text-gray-900">
            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
          </h1>
          <p className="text-gray-600 mt-1">
            {currentUser.role === 'admin'
              ? '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ —Å–∏—Å—Ç–µ–º—ã'
              : '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –≤–∞—à–µ–≥–æ –æ—Ñ–∏—Å–∞'
            }
          </p>
        </div>

        {canCreateInvitations && (
          <button
            onClick={() => setShowInvitationModal(true)}
            className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center space-x-2"
          >
            <span>+</span>
            <span>–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</span>
          </button>
        )}
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
        <div className="bg-white p-4 rounded-lg shadow-sm border border-gray-200">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</p>
              <p className="text-2xl font-bold text-gray-900">{visibleUsers.length}</p>
            </div>
            <div className="p-2 bg-blue-100 rounded-lg">
              üë•
            </div>
          </div>
        </div>

        <div className="bg-white p-4 rounded-lg shadow-sm border border-gray-200">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">–ê–∫—Ç–∏–≤–Ω—ã—Ö</p>
              <p className="text-2xl font-bold text-green-600">
                {visibleUsers.filter(u => u.isActive).length}
              </p>
            </div>
            <div className="p-2 bg-green-100 rounded-lg">
              ‚úÖ
            </div>
          </div>
        </div>

        <div className="bg-white p-4 rounded-lg shadow-sm border border-gray-200">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">–Æ—Ä–∏—Å—Ç–æ–≤</p>
              <p className="text-2xl font-bold text-blue-600">
                {visibleUsers.filter(u => u.role === 'lawyer').length}
              </p>
            </div>
            <div className="p-2 bg-blue-100 rounded-lg">
              ‚öñÔ∏è
            </div>
          </div>
        </div>

        <div className="bg-white p-4 rounded-lg shadow-sm border border-gray-200">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-sm font-medium text-gray-600">–û–∂–∏–¥–∞—é—â–∏—Ö</p>
              <p className="text-2xl font-bold text-orange-600">
                {invitations.length}
              </p>
            </div>
            <div className="p-2 bg-orange-100 rounded-lg">
              ‚è≥
            </div>
          </div>
        </div>
      </div>

      {/* –û–∂–∏–¥–∞—é—â–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è */}
      <PendingInvitations
        invitations={invitations}
        currentUser={currentUser}
        onResendInvitation={resendInvitation}
        onDeleteInvitation={deleteInvitation}
      />

      {/* –¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
      <div className="bg-white rounded-lg shadow-sm border border-gray-200">
        <div className="px-6 py-4 border-b border-gray-200">
          <h3 className="text-lg font-medium text-gray-900">
            –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ({visibleUsers.length})
          </h3>
        </div>

        <div className="overflow-x-auto">
          <table className="min-w-full divide-y divide-gray-200">
            <thead className="bg-gray-50">
              <tr>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  –†–æ–ª—å
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  –û—Ñ–∏—Å
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  –°—Ç–∞—Ç—É—Å
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥
                </th>
                <th className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                  –î–µ–π—Å—Ç–≤–∏—è
                </th>
              </tr>
            </thead>
            <tbody className="bg-white divide-y divide-gray-200">
              {visibleUsers.map((user) => (
                <tr key={user.id} className="hover:bg-gray-50">
                  <td className="px-6 py-4 whitespace-nowrap">
                    <div className="flex items-center">
                      <div className="flex-shrink-0 h-10 w-10">
                        <div className="h-10 w-10 rounded-full bg-gray-300 flex items-center justify-center">
                          <span className="text-sm font-medium text-gray-700">
                            {user.name.charAt(0).toUpperCase()}
                          </span>
                        </div>
                      </div>
                      <div className="ml-4">
                        <div className="text-sm font-medium text-gray-900">{user.name}</div>
                        <div className="text-sm text-gray-500">{user.email}</div>
                      </div>
                    </div>
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap">
                    <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                      user.role === 'admin' ? 'bg-red-100 text-red-800' :
                      user.role === 'office_admin' ? 'bg-purple-100 text-purple-800' :
                      user.role === 'lawyer' ? 'bg-blue-100 text-blue-800' :
                      'bg-gray-100 text-gray-800'
                    }`}>
                      {user.role === 'admin' && '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'}
                      {user.role === 'office_admin' && '–ê–¥–º–∏–Ω –æ—Ñ–∏—Å–∞'}
                      {user.role === 'lawyer' && '–Æ—Ä–∏—Å—Ç'}
                      {user.role === 'client' && '–ö–ª–∏–µ–Ω—Ç'}
                    </span>
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                    {offices.find(o => o.id === user.officeId)?.name || '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω'}
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap">
                    <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                      user.isActive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'
                    }`}>
                      {user.isActive ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}
                    </span>
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                    {user.lastLogin
                      ? new Date(user.lastLogin).toLocaleDateString('ru-RU')
                      : '–ù–∏–∫–æ–≥–¥–∞'
                    }
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                    {canManageUsers && (
                      <button className="text-blue-600 hover:text-blue-900">
                        –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                      </button>
                    )}
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è */}
      <InvitationModal
        isOpen={showInvitationModal}
        onClose={() => setShowInvitationModal(false)}
        onSuccess={(message) => {
        setShowInvitationModal(false);
        onUserUpdate(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        if (message) {
        // –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å toast –∏–ª–∏ alert
        console.log('‚úÖ', message);
        // toast.success(message);
      }
    }}
  currentUser={currentUser}
/>
    </div>
  );
};

export { UserManagement as default };