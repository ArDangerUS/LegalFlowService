// src/types/user.ts - –ü–æ–ª–Ω—ã–µ —Ç–∏–ø—ã –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —Ä–æ–ª–µ–π

export type UserRole = 'admin' | 'office_admin' | 'lawyer' | 'client';

export interface User {
  id: string;
  name: string;
  email: string;
  role: UserRole;
  officeId?: string;
  isActive: boolean;
  createdAt: string;
  lastLogin?: string;
}

export interface Office {
  id: string;
  name: string;
  address?: string;
  phone?: string;
  email?: string;
  createdAt: string;
  userCount?: number; // –î–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
}

export interface Invitation {
  id: string;
  email: string;
  role: UserRole;
  officeId?: string;
  officeName?: string;
  invitedBy: string;
  inviterName: string;
  token: string;
  expiresAt: string;
  createdAt: string;
  status: 'pending' | 'accepted' | 'expired';
}

export interface UserPermission {
  role: UserRole;
  permission: string;
  resource: string;
  scope: 'all' | 'office' | 'own';
}

// –î–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å–æ —Å—Ç–∞—Ä—ã–º–∏ —Ç–∏–ø–∞–º–∏, –µ—Å–ª–∏ –æ–Ω–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è
export interface DatabaseUser extends User {
  office_id?: string;
  is_active: boolean;
  created_at: string;
  last_login?: string;
}

// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–æ–ª—è–º–∏
export const RoleUtils = {
  getDisplayName(role: UserRole): string {
    const roleNames: Record<UserRole, string> = {
      admin: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
      office_admin: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ—Ñ–∏—Å–∞',
      lawyer: '–Æ—Ä–∏—Å—Ç',
      client: '–ö–ª–∏–µ–Ω—Ç'
    };
    return roleNames[role];
  },

  getRoleHierarchy(): UserRole[] {
    return ['admin', 'office_admin', 'lawyer', 'client'];
  },

  canManageRole(managerRole: UserRole, targetRole: UserRole): boolean {
    if (managerRole === 'admin') return true;
    if (managerRole === 'office_admin') {
      return ['lawyer', 'client'].includes(targetRole);
    }
    return false;
  },

  getRoleColor(role: UserRole): string {
    const colors: Record<UserRole, string> = {
      admin: 'bg-red-100 text-red-800',
      office_admin: 'bg-purple-100 text-purple-800',
      lawyer: 'bg-blue-100 text-blue-800',
      client: 'bg-green-100 text-green-800'
    };
    return colors[role];
  },

  getRoleIcon(role: UserRole): string {
    const icons: Record<UserRole, string> = {
      admin: 'üëë',
      office_admin: 'üè¢',
      lawyer: '‚öñÔ∏è',
      client: 'üë§'
    };
    return icons[role];
  }
};